apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway
  template:
    metadata:
      labels:
        app: gateway
    spec:
      initContainers:
        - name: wait-for-services
          image: bitnami/kubectl:latest
          command:
            - sh
            - -c
            - |
              # Function to wait for a pod to appear
              wait_for_pod() {
                local app=$1
                while [ -z "$(kubectl get pods -n api-gateway -l app=$app -o jsonpath="{.items}")" ]; do
                  echo Waiting for $app pod to appear; sleep 30;
                done;
              }

              # Function to wait for a pod to be running
              wait_for_running() {
                local app=$1
                while [ "$(kubectl get pods -n api-gateway -l app=$app -o jsonpath="{.items[0].status.phase}")" != "Running" ]; do
                  echo Waiting for $app to be running; sleep 30;
                done;
              }

              # Wait for service pod to appear and be running
              wait_for_pod "user-service"
              wait_for_running "user-service"

              wait_for_pod "auth-service"
              wait_for_running "auth-service"
      containers:
        - name: gateway
          image: commondev73/api-gateway-nest:dev
          ports:
            - containerPort: 3000
          env:
            - name: APP_PORT
              value: "3000"
            - name: COOKIE_ACCESS_TOKEN_NAME
              value: "accessToken"
            - name: COOKIE_REFRESH_TOKEN_NAME
              value: "refreshToken"
            - name: KAFKA_BROKER
              value: "kafka.kafka.svc.cluster.local:9092"
            - name: KAFKA_CLIENT_ID
              value: "api-gateway"
            - name: KAFKA_GROUP_ID
              value: "api-gateway-consumer"
            - name: KAFKA_AUTH_SERVICE_GROUP_ID
              value: "auth-gateway-consumer"
            - name: KAFKA_USER_SERVICE_GROUP_ID
              value: "user-gateway-consumer"

              
---
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: api-gateway
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: gateway
  type: ClusterIP
